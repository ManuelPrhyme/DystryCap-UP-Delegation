/* Mobile-first responsive dashboard styles */

/* Dashboard container */
.dashboard {
  width: 100%;
  min-height: 100vh;
  background: linear-gradient(135deg, var(--light-back) 0%, #e8eaf6 100%);
  padding: var(--spacing-md);
}

@media (min-width: 768px) {
  .dashboard {
    padding: var(--spacing-lg);
  }
}

@media (min-width: 1024px) {
  .dashboard {
    padding: var(--spacing-xl);
  }
}

/* Header */
.header {
  background: linear-gradient(135deg, var(--dark-back) 0%, var(--primary) 100%);
  padding: var(--spacing-lg);
  border-radius: var(--radius-2xl);
  margin-bottom: var(--spacing-xl);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-lg);
  box-shadow: var(--shadow-lg);
  position: relative;
  overflow: hidden;
}

.header::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="50" cy="10" r="0.5" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  opacity: 0.3;
}

@media (min-width: 768px) {
  .header {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-xl) var(--spacing-2xl);
  }
}

/* Logo */
.Logo {
  position: relative;
  z-index: 1;
}

#Logo {
  height: 3rem;
  width: auto;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
}

@media (min-width: 768px) {
  #Logo {
    height: 3.5rem;
  }
}

/* Connect button section */
.connectButton {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-md);
  position: relative;
  z-index: 1;
}

@media (min-width: 768px) {
  .connectButton {
    flex-direction: row;
    gap: var(--spacing-lg);
  }
}

.connectButton h2 {
  font-size: 1rem;
  color: var(--white);
  background: rgba(255, 255, 255, 0.1);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-lg);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

#connectbtn {
  background: var(--white);
  color: var(--dark-back);
  font-size: 1rem;
  font-weight: 600;
  padding: var(--spacing-md) var(--spacing-xl);
  border-radius: var(--radius-xl);
  cursor: pointer;
  transition: all var(--transition-normal);
  box-shadow: var(--shadow-md);
  min-height: 48px;
  min-width: 120px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid transparent;
}

#connectbtn:hover:not(:disabled) {
  background: var(--gray-100);
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

#connectbtn:active:not(:disabled) {
  transform: translateY(0);
  box-shadow: var(--shadow-md);
}

#connectbtn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

/* Status Messages */
.status-message {
  padding: var(--spacing-md) var(--spacing-lg);
  border-radius: var(--radius-lg);
  margin-bottom: var(--spacing-lg);
  font-weight: 500;
  text-align: center;
  animation: slideDown 0.3s ease-out;
}

.status-message.success {
  background: rgba(40, 167, 69, 0.1);
  color: var(--success);
  border: 1px solid var(--success);
}

.status-message.error {
  background: rgba(220, 53, 69, 0.1);
  color: var(--danger);
  border: 1px solid var(--danger);
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Connect Prompt */
.connect-prompt {
  text-align: center;
  padding: var(--spacing-2xl);
  background: var(--white);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-md);
  border: 1px solid var(--gray-200);
}

.connect-prompt h3 {
  color: var(--gray-700);
  margin-bottom: var(--spacing-md);
}

.connect-prompt p {
  color: var(--gray-600);
  font-size: 1.1rem;
  line-height: 1.6;
}

/* Loading States */
.loading-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-md);
  padding: var(--spacing-2xl);
  color: var(--gray-600);
}

.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid var(--gray-200);
  border-top: 4px solid var(--primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Content Area */
.contentArea {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xl);
  max-width: 1200px;
  margin: 0 auto;
}

@media (min-width: 1024px) {
  .contentArea {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: var(--spacing-2xl);
  }
}

/* Section styling */
.contentArea > div {
  background: var(--white);
  border-radius: var(--radius-xl);
  padding: var(--spacing-xl);
  box-shadow: var(--shadow-md);
  border: 1px solid var(--gray-200);
  transition: all var(--transition-normal);
}

.contentArea > div:hover {
  box-shadow: var(--shadow-lg);
  transform: translateY(-2px);
}

/* Section headers */
.section_head, .head {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--dark-back);
  margin-bottom: var(--spacing-lg);
  text-align: center;
}

@media (min-width: 768px) {
  .section_head, .head {
    font-size: 1.75rem;
    text-align: left;
  }
}

/* Horizontal rule */
.hr {
  height: 2px;
  background: linear-gradient(90deg, transparent, var(--primary), transparent);
  border: none;
  margin: var(--spacing-lg) 0;
  border-radius: 1px;
}

/* Connect message */
#AssignSecConnect {
  text-align: center;
  font-size: 1.5rem;
  color: var(--gray-600);
  padding: var(--spacing-2xl);
}

/* Caps section */
.caps {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.Caps {
  background: var(--gray-50);
  border: 1px solid var(--gray-200);
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);
  transition: all var(--transition-normal);
}

.Caps:hover {
  background: var(--white);
  box-shadow: var(--shadow-md);
  border-color: var(--primary);
}

.CapsHead {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-md);
}

.CapsHead img {
  height: 2rem;
  width: auto;
  border-radius: var(--radius-md);
}

.CapsHead h3 {
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--gray-800);
  margin: 0;
}

.capsData h4 {
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--primary);
  margin: 0;
  text-align: center;
}

@media (min-width: 768px) {
  .capsData h4 {
    text-align: left;
  }
}

/* Form sections */
.spendContent, .delegateContent {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.warning {
  background: var(--warning);
  color: var(--gray-800);
  padding: var(--spacing-md);
  border-radius: var(--radius-md);
  font-size: 0.875rem;
  font-weight: 500;
  text-align: center;
  border-left: 4px solid var(--danger);
}

/* Form inputs */
#recepient, #Delegate {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
}

#recepient h4, #Delegate h4 {
  font-size: 1rem;
  font-weight: 600;
  color: var(--gray-700);
  margin: 0;
}

#recepient input, #Delegate input {
  width: 100%;
  height: 48px;
  border: 2px solid var(--gray-300);
  background: var(--white);
  font-size: 1rem;
  padding: var(--spacing-md);
  border-radius: var(--radius-lg);
  transition: all var(--transition-fast);
}

#recepient input:focus, #Delegate input:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(103, 95, 214, 0.1);
  outline: none;
}

#recepient input:disabled, #Delegate input:disabled {
  background: var(--gray-100);
  color: var(--gray-500);
  cursor: not-allowed;
}

#recepient button, #Delegate button {
  background: linear-gradient(135deg, var(--primary) 0%, var(--primary-light) 100%);
  color: var(--white);
  font-size: 1rem;
  font-weight: 600;
  padding: var(--spacing-md) var(--spacing-xl);
  border-radius: var(--radius-lg);
  cursor: pointer;
  transition: all var(--transition-normal);
  box-shadow: var(--shadow-md);
  min-height: 48px;
  border: none;
  margin-top: var(--spacing-md);
}

#recepient button:hover:not(:disabled), #Delegate button:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

#recepient button:active:not(:disabled), #Delegate button:active:not(:disabled) {
  transform: translateY(0);
  box-shadow: var(--shadow-md);
}

#recepient button:disabled, #Delegate button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .dashboard {
    padding: var(--spacing-sm);
  }
  
  .header {
    padding: var(--spacing-md);
    margin-bottom: var(--spacing-lg);
  }
  
  .contentArea > div {
    padding: var(--spacing-lg);
  }
  
  .section_head, .head {
    font-size: 1.25rem;
  }
  
  #recepient button, #Delegate button {
    width: 100%;
  }
  
  .status-message {
    margin: 0 var(--spacing-sm) var(--spacing-lg) var(--spacing-sm);
  }
}

/* Loading states */
.loading {
  opacity: 0.6;
  pointer-events: none;
}

/* Success states */
.success {
  border-color: var(--success) !important;
  background: rgba(40, 167, 69, 0.1) !important;
}

/* Error states */
.error {
  border-color: var(--danger) !important;
  background: rgba(220, 53, 69, 0.1) !important;
}

/* Animation classes */
.fade-in {
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.slide-up {
  animation: slideUp 0.3s ease-out;
}

@keyframes slideUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Touch-friendly improvements */
@media (hover: none) and (pointer: coarse) {
  button, input, select {
    min-height: 44px;
  }
  
  .Caps {
    padding: var(--spacing-xl);
  }
  
  .header {
    padding: var(--spacing-xl);
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .contentArea > div {
    background: var(--gray-800);
    border-color: var(--gray-700);
    color: var(--white);
  }
  
  .Caps {
    background: var(--gray-700);
    border-color: var(--gray-600);
  }
  
  .CapsHead h3 {
    color: var(--gray-200);
  }
  
  #recepient input, #Delegate input {
    background: var(--gray-700);
    border-color: var(--gray-600);
    color: var(--white);
  }
  
  .connect-prompt {
    background: var(--gray-800);
    border-color: var(--gray-700);
  }
  
  .connect-prompt h3 {
    color: var(--gray-200);
  }
  
  .connect-prompt p {
    color: var(--gray-300);
  }
}




